// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST renderers formatted text renderer should handle tables 1`] = `
"prop name = expected value
prop name  
  > someJS();"
`;

exports[`AST renderers formatted text renderer should handle tables 2`] = `
"[31mâœ– [0mprop name prop name prop name prop name prop name ~ expected value expected value expected value expected value 
                                                      expected value                                              
                                                    â†’ expected value expected value expected value expected value 
                                                      expected value                                              
[31mâœ– [0mJavaScript expression                     
  > someJS(); someJS(); someJS(); someJS();        
  > someJS(); someJS(); someJS();                  
  > someJS(); someJS(); someJS();                  "
`;

exports[`AST renderers formatted text renderer should render condition 1`] = `
"
condition: element [32mMy element[0m exists
"
`;

exports[`AST renderers formatted text renderer should render condition 2`] = `
"
condition: element [32mMy element[0m exists
    [31mâœ– [0mprop name prop name prop name prop name prop name ~ expected value expected value expected value expected value 
                                                          expected value                                              
                                                        â†’ expected value expected value expected value expected value 
                                                          expected value                                              
    [31mâœ– [0mJavaScript expression                     
      > someJS(); someJS(); someJS(); someJS();        
      > someJS(); someJS(); someJS();                  
      > someJS(); someJS(); someJS();                  "
`;

exports[`AST renderers formatted text renderer should render test line 1`] = `
"Assert element [32mMy element[0m is visible
"
`;

exports[`AST renderers formatted text renderer should render test line 2`] = `
"Assert element [32mMy element[0m

  condition: element [32mMy element[0m exists
"
`;

exports[`AST renderers formatted text renderer should render test line results 1`] = `
"[31mâœ– [0mAssert application has exited

[31mfail: Condition was not met[0m"
`;

exports[`AST renderers formatted text renderer should render test line results 2`] = `
"[33mâ€¼ [0mAssert application has exited
"
`;

exports[`AST renderers formatted text renderer should render test line results 3`] = `
"[34mÂ» [0mAssert application has exited
"
`;

exports[`AST renderers formatted text renderer should render test line results 4`] = `
"Â» Assert application has exited
"
`;

exports[`AST renderers formatted text renderer should render test line results 5`] = `
"[31mâœ– [0mAssert application has exited
"
`;

exports[`AST renderers plain text renderer should handle props 1`] = `
"prop name = expected value
prop name  
  > someJS();"
`;

exports[`AST renderers plain text renderer should handle props 2`] = `
"âœ– prop name prop name prop name prop name prop name ~ expected value expected value expected value expected value 
                                                      expected value                                              
                                                    â†’ expected value expected value expected value expected value 
                                                      expected value                                              
âœ– JavaScript expression                              
  > someJS(); someJS(); someJS(); someJS();        
  > someJS(); someJS(); someJS();                  
  > someJS(); someJS(); someJS();                  "
`;

exports[`AST renderers plain text renderer should render condition 1`] = `
"
condition: element My element exists
"
`;

exports[`AST renderers plain text renderer should render condition 2`] = `
"
condition: element My element exists
    âœ– prop name prop name prop name prop name prop name ~ expected value expected value expected value expected value 
                                                          expected value                                              
                                                        â†’ expected value expected value expected value expected value 
                                                          expected value                                              
    âœ– JavaScript expression                              
      > someJS(); someJS(); someJS(); someJS();        
      > someJS(); someJS(); someJS();                  
      > someJS(); someJS(); someJS();                  "
`;

exports[`AST renderers plain text renderer should render test line 1`] = `
"Assert element My element is visible
"
`;

exports[`AST renderers plain text renderer should render test line 2`] = `
"Assert element My element

  condition: element My element exists
"
`;

exports[`AST renderers plain text renderer should render test line results 1`] = `
"âœ– Assert application has exited

fail: Condition was not met"
`;

exports[`AST renderers plain text renderer should render test line results 2`] = `
"â€¼ Assert application has exited
"
`;

exports[`AST renderers plain text renderer should render test line results 3`] = `
"Â» Assert application has exited
"
`;

exports[`AST renderers plain text renderer should render test line results 4`] = `
"Â» Assert application has exited
"
`;

exports[`AST renderers plain text renderer should render test line results 5`] = `
"âœ– Assert application has exited
"
`;
