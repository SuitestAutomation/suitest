// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test line results translation should translate "ActionNotAvailable" error 1`] = `
Object {
  "type": "text",
  "value": "This test command is not supported by the current app configuration",
}
`;

exports[`Test line results translation should translate "ElementIsNotSelectable" error 1`] = `
Object {
  "type": "text",
  "value": "Element is not selectable.",
}
`;

exports[`Test line results translation should translate "ElementNotInteractable" error 1`] = `
Object {
  "type": "text",
  "value": "Element is not currently interactable and may not be manipulated.",
}
`;

exports[`Test line results translation should translate "ElementNotVisible" error 1`] = `
Object {
  "type": "text",
  "value": "Element is not currently visible.",
}
`;

exports[`Test line results translation should translate "ILInternalError" error 1`] = `
Object {
  "type": "text",
  "value": "Internal error occurred",
}
`;

exports[`Test line results translation should translate "IMEEngineActivationFailed" error 1`] = `
Object {
  "type": "text",
  "value": "An IME engine could not be started.",
}
`;

exports[`Test line results translation should translate "IMENotAvailable" error 1`] = `
Object {
  "type": "text",
  "value": "IME was not available.",
}
`;

exports[`Test line results translation should translate "InvalidCookieDomain" error 1`] = `
Object {
  "type": "text",
  "value": "Cannot set a cookie on a domain different from the current page.",
}
`;

exports[`Test line results translation should translate "InvalidElementCoordinates" error 1`] = `
Object {
  "type": "text",
  "value": "The coordinates provided to an interactions operation are invalid.",
}
`;

exports[`Test line results translation should translate "InvalidElementState" error 1`] = `
Object {
  "type": "text",
  "value": "Cannot perform operation with element because this element is in an invalid state (e.g. attempting to click a disabled element).",
}
`;

exports[`Test line results translation should translate "InvalidSelector" error 1`] = `
Object {
  "type": "text",
  "value": "Element selector is malformed.",
}
`;

exports[`Test line results translation should translate "NoAlertOpenError" error 1`] = `
Object {
  "type": "text",
  "value": "There was no modal dialog on page.",
}
`;

exports[`Test line results translation should translate "NoSuchElement" error 1`] = `
Object {
  "type": "text",
  "value": "Element was not found.",
}
`;

exports[`Test line results translation should translate "NoSuchFrame" error 1`] = `
Object {
  "type": "text",
  "value": "Cannot switch to frame",
}
`;

exports[`Test line results translation should translate "NoSuchWindow" error 1`] = `
Object {
  "type": "text",
  "value": "A request to switch to a different window could not be satisfied because the window could not be found.",
}
`;

exports[`Test line results translation should translate "ScriptTimeout" error 1`] = `
Object {
  "type": "text",
  "value": "A script takes too long to execute.",
}
`;

exports[`Test line results translation should translate "StaleElementReference" error 1`] = `
Object {
  "type": "text",
  "value": "Element is no longer inside DOM.",
}
`;

exports[`Test line results translation should translate "Success" error 1`] = `
Object {
  "type": "text",
  "value": "Command executed successfully.",
}
`;

exports[`Test line results translation should translate "Timeout" error 1`] = `
Object {
  "type": "text",
  "value": "This command takes too long to execute.",
}
`;

exports[`Test line results translation should translate "UnableToSetCookie" error 1`] = `
Object {
  "type": "text",
  "value": "Cannot set the specified cookie value.",
}
`;

exports[`Test line results translation should translate "UnexpectedAlertOpen" error 1`] = `
Object {
  "type": "text",
  "value": "A modal dialog was open, blocking this operation.",
}
`;

exports[`Test line results translation should translate "UnknownCommand" error 1`] = `
Object {
  "type": "text",
  "value": "The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.",
}
`;

exports[`Test line results translation should translate "XPathLookupError" error 1`] = `
Object {
  "type": "text",
  "value": "An error occurred while searching for an element by XPath.",
}
`;

exports[`Test line results translation should translate "activationExpired" error 1`] = `
Object {
  "type": "text",
  "value": "Could not open the app because the DevKit/TestKit expired.",
}
`;

exports[`Test line results translation should translate "appCrashed" error 1`] = `
Object {
  "type": "text",
  "value": "App seems to have crashed",
}
`;

exports[`Test line results translation should translate "appNotRunning" error 1`] = `
Object {
  "type": "text",
  "value": "App is not running",
}
`;

exports[`Test line results translation should translate "appRunning" error 1`] = `
Object {
  "type": "text",
  "value": "App is still running",
}
`;

exports[`Test line results translation should translate "appleAppSignError" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to launch app: App code sign error. https://suite.st/docs/devices/apple-tv/#app-code-sign-error",
}
`;

exports[`Test line results translation should translate "appleError65" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to launch app: Apple ID account error. https://suite.st/docs/devices/apple-tv/#apple-id-account-error",
}
`;

exports[`Test line results translation should translate "appleError70" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to launch app: Xcode error. https://suite.st/docs/devices/apple-tv/#xcode-error",
}
`;

exports[`Test line results translation should translate "bootstrapAppNotDetected" error 1`] = `
Object {
  "type": "text",
  "value": "The Suitest bootstrap application was not detected.",
}
`;

exports[`Test line results translation should translate "bootstrapPageNotDetected" error 1`] = `
Object {
  "type": "text",
  "value": "App seems to have exited correctly but something went wrong when loading the Suitest channel autostart application",
}
`;

exports[`Test line results translation should translate "conditionNotSatisfied" error 1`] = `
Object {
  "type": "text",
  "value": "Maximum amount of key presses reached. Condition was not satisfied",
}
`;

exports[`Test line results translation should translate "connectionNotAuthorized" error 1`] = `
Object {
  "type": "text",
  "value": "Connection not authorized. Debug mode is not allowed on the device, please make sure it is enabled.",
}
`;

exports[`Test line results translation should translate "deviceConnectionError" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to initialize device control.",
}
`;

exports[`Test line results translation should translate "driverException" error 1`] = `
Object {
  "type": "text",
  "value": "Unexpected exception occurred on connected device. Please, contact support@suite.st if you see this often",
}
`;

exports[`Test line results translation should translate "failedStart" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to open application",
}
`;

exports[`Test line results translation should translate "higherOSVersionRequired" error 1`] = `
Object {
  "type": "text",
  "value": "The app package requires higher OS version.",
}
`;

exports[`Test line results translation should translate "initPlatformFailed" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to start Suitest bootstrap application on this device",
}
`;

exports[`Test line results translation should translate "internalError" error 1`] = `
Object {
  "type": "text",
  "value": "Internal error occurred",
}
`;

exports[`Test line results translation should translate "invalidCredentials" error 1`] = `
Object {
  "type": "text",
  "value": "Credentials for this device were changed",
}
`;

exports[`Test line results translation should translate "invalidOpenAppOverrideReference" error 1`] = `
Object {
  "type": "text",
  "value": "Could not start execution, please check open app override setting. https://suite.st/docs/application/more-configuration-options/#open-app-override-test",
}
`;

exports[`Test line results translation should translate "invalidUrl" error 1`] = `
Object {
  "type": "text",
  "value": "Application could not be launched. Please verify you have provided URL for this configuration.",
}
`;

exports[`Test line results translation should translate "lateManualLaunch" error 1`] = `
Object {
  "type": "text",
  "value": "In this configuration the \\"open app\\" commands inside the test are not supported. You may however start the test with \\"open app\\" command",
}
`;

exports[`Test line results translation should translate "launchExpired" error 1`] = `
Object {
  "type": "text",
  "value": "Identical scheduling aborted",
}
`;

exports[`Test line results translation should translate "missingApp" error 1`] = `
Object {
  "type": "text",
  "value": "Application is not installed on the device",
}
`;

exports[`Test line results translation should translate "missingCpp" error 1`] = `
Object {
  "type": "text",
  "value": "Make sure you have Microsoft Visual C++ Redistributable installed. https://suite.st/docs/devices/playstation",
}
`;

exports[`Test line results translation should translate "missingDotNet" error 1`] = `
Object {
  "type": "text",
  "value": "Please make sure you have the .NET Framework installed. https://suite.st/docs/troubleshooting/playstation/#net-framework-not-installed",
}
`;

exports[`Test line results translation should translate "missingPSSDK" error 1`] = `
Object {
  "type": "text",
  "value": "Please make sure that you have the PlayStation SDK installed. https://suite.st/docs/troubleshooting/playstation/#playstation-sdk-not-installed",
}
`;

exports[`Test line results translation should translate "missingPackage" error 1`] = `
Object {
  "type": "text",
  "value": "Application package was not found on the target device",
}
`;

exports[`Test line results translation should translate "noConnection" error 1`] = `
Object {
  "type": "text",
  "value": "Could not connect to server while polling URL",
}
`;

exports[`Test line results translation should translate "noHasLines" error 1`] = `
Object {
  "type": "text",
  "value": "No assertion properties defined",
}
`;

exports[`Test line results translation should translate "notActiveDeveloperMode" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to launch application. Is \\"developer mode\\" turned on? https://suite.st/docs/devices/lg-webos/#enable-developer-mode-on-the-device",
}
`;

exports[`Test line results translation should translate "notExpectedResponse" error 1`] = `
Object {
  "type": "text",
  "value": "Unexpected response received while polling URL",
}
`;

exports[`Test line results translation should translate "notResponding" error 1`] = `
Object {
  "type": "text",
  "value": "Device stopped responding",
}
`;

exports[`Test line results translation should translate "outOfMemory" error 1`] = `
Object {
  "type": "text",
  "value": "Failed to open the app. Device is out of memory, please restart the device.",
}
`;

exports[`Test line results translation should translate "packageNotFound" error 1`] = `
Object {
  "type": "text",
  "value": "Selected configuration does not contain an app package. Upload a package on your app\`s configuration page before continuing",
}
`;

exports[`Test line results translation should translate "serverError" error 1`] = `
Object {
  "type": "text",
  "value": "Internal error occurred",
}
`;

exports[`Test line results translation should translate "signInRequired" error 1`] = `
Object {
  "type": "text",
  "value": "Account needs to be signed in on target device.",
}
`;

exports[`Test line results translation should translate "suitestifyError" error 1`] = `
Object {
  "type": "text",
  "value": "Suitestify failed to start. Check your Suitestify settings",
}
`;

exports[`Test line results translation should translate "suitestifyRequired" error 1`] = `
Object {
  "type": "text",
  "value": "This assertion only works with Suitestify. You can configure your app to use Suitestify in the app settings. Please note that Suitestify is not available for all platforms",
}
`;

exports[`Test line results translation should translate "targetManagerBusy" error 1`] = `
Object {
  "type": "text",
  "value": "Please try again in a few minutes.",
}
`;

exports[`Test line results translation should translate "testIsNotStarted" error 1`] = `
Object {
  "type": "text",
  "value": "Cannot continue with the current test anymore because of previous errors or bad initialization.",
}
`;

exports[`Test line results translation should translate "timeLimitExceeded" error 1`] = `
Object {
  "type": "text",
  "value": "Test execution limit exceeded (based on your subscription)",
}
`;

exports[`Test line results translation should translate "unclickableElement" error 1`] = `
Object {
  "type": "text",
  "value": "Element click is obstucted by different element.",
}
`;

exports[`Test line results translation should translate "unfocusableElement" error 1`] = `
Object {
  "type": "text",
  "value": "Element can't receive focus to enter text.",
}
`;

exports[`Test line results translation should translate "unknownWebDriverKey" error 1`] = `
Object {
  "type": "text",
  "value": "This key is not supported on the target device.",
}
`;

exports[`Test line results translation should translate "wrongApp" error 1`] = `
Object {
  "type": "text",
  "value": "Wrong app ID detected",
}
`;

exports[`Test line results translation should translate "wrongAppDetected" error 1`] = `
Object {
  "type": "text",
  "value": "App seems to have exited correctly, however another app has been opened",
}
`;
